Archive member included because of file (symbol)

c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_udivmodhi4.o)
                              ./adc.o (__udivmodhi4)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_divmodhi4.o)
                              ./buffer.o (__divmodhi4)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
                              c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm164p.o (exit)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
                              ./buffer.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

rel4_flag           0x1               ./main.o
rel3_flag           0x1               ./main.o
flag_1s             0x2               ./main.o
buffer2             0x40              ./buffer.o
rel1_flag           0x1               ./main.o
flag_1ms            0x2               ./main.o
buffer1             0x40              ./buffer.o
rel2_flag           0x1               ./main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
user_signatures  0x00850000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm164p.o
LOAD ./adc.o
LOAD ./buffer.o
LOAD ./main.o
LOAD ./uart.o
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5\libc.a
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x524
 *(.vectors)
 .vectors       0x00000000       0x7c c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm164p.o
                0x00000000                __vector_default
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000007c                . = ALIGN (0x2)
                0x0000007c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000007c        0x0 linker stubs
 *(.trampolines*)
                0x0000007c                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000007c                __ctors_start = .
 *(.ctors)
                0x0000007c                __ctors_end = .
                0x0000007c                __dtors_start = .
 *(.dtors)
                0x0000007c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000007c        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm164p.o
                0x0000007c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000007c        0xc c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm164p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000088       0x10 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
                0x00000088                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000098        0x8 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm164p.o
 *(.init9)
 *(.text)
 .text          0x000000a0        0x4 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm164p.o
                0x000000a0                __vector_22
                0x000000a0                __vector_1
                0x000000a0                __vector_24
                0x000000a0                __vector_12
                0x000000a0                __bad_interrupt
                0x000000a0                __vector_6
                0x000000a0                __vector_3
                0x000000a0                __vector_23
                0x000000a0                __vector_30
                0x000000a0                __vector_25
                0x000000a0                __vector_11
                0x000000a0                __vector_13
                0x000000a0                __vector_17
                0x000000a0                __vector_19
                0x000000a0                __vector_7
                0x000000a0                __vector_27
                0x000000a0                __vector_5
                0x000000a0                __vector_4
                0x000000a0                __vector_9
                0x000000a0                __vector_2
                0x000000a0                __vector_21
                0x000000a0                __vector_15
                0x000000a0                __vector_29
                0x000000a0                __vector_8
                0x000000a0                __vector_26
                0x000000a0                __vector_14
                0x000000a0                __vector_10
                0x000000a0                __vector_18
 .text          0x000000a4        0x0 ./adc.o
 .text          0x000000a4        0x0 ./buffer.o
 .text          0x000000a4        0x0 ./main.o
 .text          0x000000a4        0x0 ./uart.o
 .text          0x000000a4        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_udivmodhi4.o)
 .text          0x000000a4        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_divmodhi4.o)
 .text          0x000000a4        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .text          0x000000a4        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
                0x000000a4                . = ALIGN (0x2)
 *(.text.*)
 .text.adc_init
                0x000000a4       0x1c ./adc.o
                0x000000a4                adc_init
 .text.adc_read_single
                0x000000c0       0x2e ./adc.o
                0x000000c0                adc_read_single
 .text.adc_read_10
                0x000000ee       0x34 ./adc.o
                0x000000ee                adc_read_10
 .text.adc_read_avg
                0x00000122       0x4c ./adc.o
                0x00000122                adc_read_avg
 .text.adc_read_cont
                0x0000016e       0x2a ./adc.o
                0x0000016e                adc_read_cont
 .text.put_in_buffer1
                0x00000198       0x20 ./buffer.o
                0x00000198                put_in_buffer1
 .text.available_buffer1
                0x000001b8       0x18 ./buffer.o
                0x000001b8                available_buffer1
 .text.get_from_buffer1
                0x000001d0       0x20 ./buffer.o
                0x000001d0                get_from_buffer1
 .text.put_in_buffer2
                0x000001f0       0x20 ./buffer.o
                0x000001f0                put_in_buffer2
 .text.available_buffer2
                0x00000210       0x18 ./buffer.o
                0x00000210                available_buffer2
 .text.get_from_buffer2
                0x00000228       0x20 ./buffer.o
                0x00000228                get_from_buffer2
 .text.zmien_stan_przekaznikow
                0x00000248       0x58 ./main.o
                0x00000248                zmien_stan_przekaznikow
 .text.timer0_init
                0x000002a0       0x22 ./main.o
                0x000002a0                timer0_init
 .text.startup.main
                0x000002c2       0xd6 ./main.o
                0x000002c2                main
 .text.__vector_28
                0x00000398       0x14 ./main.o
                0x00000398                __vector_28
 .text.__vector_20
                0x000003ac       0x4c ./main.o
                0x000003ac                __vector_20
 .text.__vector_16
                0x000003f8       0x28 ./main.o
                0x000003f8                __vector_16
 .text.uart0_conf
                0x00000420       0x24 ./uart.o
                0x00000420                uart0_conf
 .text.uart0_send
                0x00000444        0xe ./uart.o
                0x00000444                uart0_send
 .text.uart0_receive
                0x00000452        0xe ./uart.o
                0x00000452                uart0_receive
 .text.uart0_puts
                0x00000460       0x18 ./uart.o
                0x00000460                uart0_puts
 .text.uart1_conf
                0x00000478       0x24 ./uart.o
                0x00000478                uart1_conf
 .text.uart1_send
                0x0000049c        0xe ./uart.o
                0x0000049c                uart1_send
 .text.uart1_receive
                0x000004aa        0xe ./uart.o
                0x000004aa                uart1_receive
 .text.uart1_puts
                0x000004b8       0x18 ./uart.o
                0x000004b8                uart1_puts
 .text.libgcc.mul
                0x000004d0        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x000004d0       0x28 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_udivmodhi4.o)
                0x000004d0                __udivmodhi4
 .text.libgcc   0x000004f8        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x000004f8        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x000004f8        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x000004f8        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_udivmodhi4.o)
 .text.libgcc.mul
                0x000004f8        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_divmodhi4.o)
 .text.libgcc.div
                0x000004f8       0x28 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_divmodhi4.o)
                0x000004f8                _div
                0x000004f8                __divmodhi4
 .text.libgcc   0x00000520        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_divmodhi4.o)
 .text.libgcc.prologue
                0x00000520        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_divmodhi4.o)
 .text.libgcc.builtins
                0x00000520        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_divmodhi4.o)
 .text.libgcc.fmul
                0x00000520        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_divmodhi4.o)
 .text.libgcc.mul
                0x00000520        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000520        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00000520        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000520        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000520        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000520        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000520        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000520        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000520        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000520        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000520        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000520        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
                0x00000520                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000520        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
                0x00000520                _exit
                0x00000520                exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000520        0x4 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x00000524                _etext = .

.data           0x00800100        0x0 load address 0x00000524
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm164p.o
 .data          0x00800100        0x0 ./adc.o
 .data          0x00800100        0x0 ./buffer.o
 .data          0x00800100        0x0 ./main.o
 .data          0x00800100        0x0 ./uart.o
 .data          0x00800100        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_udivmodhi4.o)
 .data          0x00800100        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_divmodhi4.o)
 .data          0x00800100        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .data          0x00800100        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800100                . = ALIGN (0x2)
                0x00800100                _edata = .
                0x00800100                PROVIDE (__data_end, .)

.bss            0x00800100       0x8c
                0x00800100                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800100        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm164p.o
 .bss           0x00800100        0x0 ./adc.o
 .bss           0x00800100        0x0 ./buffer.o
 .bss           0x00800100        0x0 ./main.o
 .bss           0x00800100        0x0 ./uart.o
 .bss           0x00800100        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_udivmodhi4.o)
 .bss           0x00800100        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_divmodhi4.o)
 .bss           0x00800100        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .bss           0x00800100        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.buffer2_tail
                0x00800100        0x1 ./buffer.o
                0x00800100                buffer2_tail
 .bss.buffer2_head
                0x00800101        0x1 ./buffer.o
                0x00800101                buffer2_head
 .bss.buffer1_tail
                0x00800102        0x1 ./buffer.o
                0x00800102                buffer1_tail
 .bss.buffer1_head
                0x00800103        0x1 ./buffer.o
                0x00800103                buffer1_head
 *(COMMON)
 COMMON         0x00800104       0x80 ./buffer.o
                0x00800104                buffer2
                0x00800144                buffer1
 COMMON         0x00800184        0x8 ./main.o
                0x00800184                rel4_flag
                0x00800185                rel3_flag
                0x00800186                flag_1s
                0x00800188                rel1_flag
                0x00800189                flag_1ms
                0x0080018b                rel2_flag
                0x0080018c                PROVIDE (__bss_end, .)
                0x00000524                __data_load_start = LOADADDR (.data)
                0x00000524                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080018c        0x0
                0x0080018c                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080018c                PROVIDE (__noinit_end, .)
                0x0080018c                _end = .
                0x0080018c                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x00000000      0x6cc
 *(.stab)
 .stab          0x00000000      0x6cc c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm164p.o

.stabstr        0x00000000       0x97
 *(.stabstr)
 .stabstr       0x00000000       0x97 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm164p.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x2f
 *(.comment)
 .comment       0x00000000       0x2f ./adc.o
                                 0x30 (size before relaxing)
 .comment       0x00000000       0x30 ./buffer.o
 .comment       0x00000000       0x30 ./main.o
 .comment       0x00000000       0x30 ./uart.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(mgr.elf elf32-avr)
LOAD linker stubs
