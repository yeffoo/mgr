Archive member included because of file (symbol)

c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_udivmodhi4.o)
                              ./adc.o (__udivmodhi4)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_divmodhi4.o)
                              ./buffer.o (__divmodhi4)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
                              c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm164p.o (exit)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_copy_data.o)
                              ./main.o (__do_copy_data)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
                              ./buffer.o (__do_clear_bss)
c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5\libc.a(strcmp.o)
                              ./main.o (strcmp)

Allocating common symbols
Common symbol       size              file

rel4_flag           0x1               ./main.o
bufferTX0           0x40              ./buffer.o
cnt                 0x1               ./main.o
rel3_flag           0x1               ./main.o
bufferTX1           0x40              ./buffer.o
flag_1s             0x2               ./main.o
rel1_flag           0x1               ./main.o
bufferRX0           0x40              ./buffer.o
data                0x8               ./main.o
relcmp              0x40              ./main.o
buf                 0x40              ./main.o
bufferRX1           0x40              ./buffer.o
flag_1ms            0x2               ./main.o
rel2_flag           0x1               ./main.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
user_signatures  0x00850000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm164p.o
LOAD ./adc.o
LOAD ./buffer.o
LOAD ./main.o
LOAD ./uart.o
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5\libc.a
LOAD c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x698
 *(.vectors)
 .vectors       0x00000000       0x7c c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm164p.o
                0x00000000                __vector_default
                0x00000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000007c                . = ALIGN (0x2)
                0x0000007c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000007c        0x0 linker stubs
 *(.trampolines*)
                0x0000007c                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000007c                __ctors_start = .
 *(.ctors)
                0x0000007c                __ctors_end = .
                0x0000007c                __dtors_start = .
 *(.dtors)
                0x0000007c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000007c        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm164p.o
                0x0000007c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000007c        0xc c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm164p.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000088       0x16 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_copy_data.o)
                0x00000088                __do_copy_data
 .init4         0x0000009e       0x10 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
                0x0000009e                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000ae        0x8 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm164p.o
 *(.init9)
 *(.text)
 .text          0x000000b6        0x4 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm164p.o
                0x000000b6                __vector_22
                0x000000b6                __vector_1
                0x000000b6                __vector_24
                0x000000b6                __vector_12
                0x000000b6                __bad_interrupt
                0x000000b6                __vector_6
                0x000000b6                __vector_3
                0x000000b6                __vector_23
                0x000000b6                __vector_30
                0x000000b6                __vector_25
                0x000000b6                __vector_11
                0x000000b6                __vector_13
                0x000000b6                __vector_17
                0x000000b6                __vector_19
                0x000000b6                __vector_7
                0x000000b6                __vector_27
                0x000000b6                __vector_5
                0x000000b6                __vector_4
                0x000000b6                __vector_9
                0x000000b6                __vector_2
                0x000000b6                __vector_21
                0x000000b6                __vector_15
                0x000000b6                __vector_29
                0x000000b6                __vector_8
                0x000000b6                __vector_26
                0x000000b6                __vector_14
                0x000000b6                __vector_10
                0x000000b6                __vector_18
 .text          0x000000ba        0x0 ./adc.o
 .text          0x000000ba        0x0 ./buffer.o
 .text          0x000000ba        0x0 ./main.o
 .text          0x000000ba        0x0 ./uart.o
 .text          0x000000ba        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_udivmodhi4.o)
 .text          0x000000ba        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_divmodhi4.o)
 .text          0x000000ba        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .text          0x000000ba        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_copy_data.o)
 .text          0x000000ba        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
 .text          0x000000ba        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5\libc.a(strcmp.o)
                0x000000ba                . = ALIGN (0x2)
 *(.text.*)
 .text.adc_init
                0x000000ba       0x1c ./adc.o
                0x000000ba                adc_init
 .text.adc_read_single
                0x000000d6       0x2e ./adc.o
                0x000000d6                adc_read_single
 .text.adc_read_10
                0x00000104       0x34 ./adc.o
                0x00000104                adc_read_10
 .text.adc_read_avg
                0x00000138       0x4c ./adc.o
                0x00000138                adc_read_avg
 .text.adc_read_cont
                0x00000184       0x2a ./adc.o
                0x00000184                adc_read_cont
 .text.put_in_bufferTX0
                0x000001ae       0x20 ./buffer.o
                0x000001ae                put_in_bufferTX0
 .text.available_bufferTX0
                0x000001ce       0x18 ./buffer.o
                0x000001ce                available_bufferTX0
 .text.get_from_bufferTX0
                0x000001e6       0x20 ./buffer.o
                0x000001e6                get_from_bufferTX0
 .text.put_in_bufferRX0
                0x00000206       0x20 ./buffer.o
                0x00000206                put_in_bufferRX0
 .text.available_bufferRX0
                0x00000226       0x18 ./buffer.o
                0x00000226                available_bufferRX0
 .text.get_from_bufferRX0
                0x0000023e       0x20 ./buffer.o
                0x0000023e                get_from_bufferRX0
 .text.put_in_bufferTX1
                0x0000025e       0x20 ./buffer.o
                0x0000025e                put_in_bufferTX1
 .text.available_bufferTX1
                0x0000027e       0x18 ./buffer.o
                0x0000027e                available_bufferTX1
 .text.get_from_bufferTX1
                0x00000296       0x20 ./buffer.o
                0x00000296                get_from_bufferTX1
 .text.put_in_bufferRX1
                0x000002b6       0x20 ./buffer.o
                0x000002b6                put_in_bufferRX1
 .text.available_bufferRX1
                0x000002d6       0x18 ./buffer.o
                0x000002d6                available_bufferRX1
 .text.get_from_bufferRX1
                0x000002ee       0x20 ./buffer.o
                0x000002ee                get_from_bufferRX1
 .text.zmien_stan_przekaznikow
                0x0000030e       0x58 ./main.o
                0x0000030e                zmien_stan_przekaznikow
 .text.timer0_init
                0x00000366       0x22 ./main.o
                0x00000366                timer0_init
 .text.startup.main
                0x00000388      0x13a ./main.o
                0x00000388                main
 .text.__vector_28
                0x000004c2       0x4c ./main.o
                0x000004c2                __vector_28
 .text.__vector_20
                0x0000050e       0x4c ./main.o
                0x0000050e                __vector_20
 .text.__vector_16
                0x0000055a       0x28 ./main.o
                0x0000055a                __vector_16
 .text.uart0_conf
                0x00000582       0x24 ./uart.o
                0x00000582                uart0_conf
 .text.uart0_send
                0x000005a6        0xe ./uart.o
                0x000005a6                uart0_send
 .text.uart0_receive
                0x000005b4        0xe ./uart.o
                0x000005b4                uart0_receive
 .text.uart0_puts
                0x000005c2       0x18 ./uart.o
                0x000005c2                uart0_puts
 .text.uart1_conf
                0x000005da       0x24 ./uart.o
                0x000005da                uart1_conf
 .text.uart1_send
                0x000005fe        0xe ./uart.o
                0x000005fe                uart1_send
 .text.uart1_receive
                0x0000060c        0xe ./uart.o
                0x0000060c                uart1_receive
 .text.uart1_puts
                0x0000061a       0x18 ./uart.o
                0x0000061a                uart1_puts
 .text.libgcc.mul
                0x00000632        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x00000632       0x28 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_udivmodhi4.o)
                0x00000632                __udivmodhi4
 .text.libgcc   0x0000065a        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x0000065a        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x0000065a        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x0000065a        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_udivmodhi4.o)
 .text.libgcc.mul
                0x0000065a        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_divmodhi4.o)
 .text.libgcc.div
                0x0000065a       0x28 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_divmodhi4.o)
                0x0000065a                _div
                0x0000065a                __divmodhi4
 .text.libgcc   0x00000682        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_divmodhi4.o)
 .text.libgcc.prologue
                0x00000682        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_divmodhi4.o)
 .text.libgcc.builtins
                0x00000682        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_divmodhi4.o)
 .text.libgcc.fmul
                0x00000682        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_divmodhi4.o)
 .text.libgcc.mul
                0x00000682        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000682        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00000682        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000682        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000682        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000682        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000682        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000682        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x00000682        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000682        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000682        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000682        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000682        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000682        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000682        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000682        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000682        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000682        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x00000682       0x12 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5\libc.a(strcmp.o)
                0x00000682                strcmp
                0x00000694                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000694        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
                0x00000694                _exit
                0x00000694                exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000694        0x4 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x00000698                _etext = .

.data           0x00800100       0x3c load address 0x00000698
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm164p.o
 .data          0x00800100        0x0 ./adc.o
 .data          0x00800100        0x0 ./buffer.o
 .data          0x00800100        0x0 ./main.o
 .data          0x00800100        0x0 ./uart.o
 .data          0x00800100        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_udivmodhi4.o)
 .data          0x00800100        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_divmodhi4.o)
 .data          0x00800100        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .data          0x00800100        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_copy_data.o)
 .data          0x00800100        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
 .data          0x00800100        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5\libc.a(strcmp.o)
 *(.data*)
 .data.reloff4  0x00800100        0x8 ./main.o
                0x00800100                reloff4
 .data.relon4   0x00800108        0x7 ./main.o
                0x00800108                relon4
 .data.reloff3  0x0080010f        0x8 ./main.o
                0x0080010f                reloff3
 .data.relon3   0x00800117        0x7 ./main.o
                0x00800117                relon3
 .data.reloff2  0x0080011e        0x8 ./main.o
                0x0080011e                reloff2
 .data.relon2   0x00800126        0x7 ./main.o
                0x00800126                relon2
 .data.reloff1  0x0080012d        0x8 ./main.o
                0x0080012d                reloff1
 .data.relon1   0x00800135        0x7 ./main.o
                0x00800135                relon1
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0080013c                . = ALIGN (0x2)
                0x0080013c                _edata = .
                0x0080013c                PROVIDE (__data_end, .)

.bss            0x0080013c      0x19a
                0x0080013c                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0080013c        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm164p.o
 .bss           0x0080013c        0x0 ./adc.o
 .bss           0x0080013c        0x0 ./buffer.o
 .bss           0x0080013c        0x0 ./main.o
 .bss           0x0080013c        0x0 ./uart.o
 .bss           0x0080013c        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_udivmodhi4.o)
 .bss           0x0080013c        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_divmodhi4.o)
 .bss           0x0080013c        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_exit.o)
 .bss           0x0080013c        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_copy_data.o)
 .bss           0x0080013c        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/avr5\libgcc.a(_clear_bss.o)
 .bss           0x0080013c        0x0 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5\libc.a(strcmp.o)
 *(.bss*)
 .bss.bufferRX1_tail
                0x0080013c        0x1 ./buffer.o
                0x0080013c                bufferRX1_tail
 .bss.bufferRX1_head
                0x0080013d        0x1 ./buffer.o
                0x0080013d                bufferRX1_head
 .bss.bufferTX1_tail
                0x0080013e        0x1 ./buffer.o
                0x0080013e                bufferTX1_tail
 .bss.bufferTX1_head
                0x0080013f        0x1 ./buffer.o
                0x0080013f                bufferTX1_head
 .bss.bufferRX0_tail
                0x00800140        0x1 ./buffer.o
                0x00800140                bufferRX0_tail
 .bss.bufferRX0_head
                0x00800141        0x1 ./buffer.o
                0x00800141                bufferRX0_head
 .bss.bufferTX0_tail
                0x00800142        0x1 ./buffer.o
                0x00800142                bufferTX0_tail
 .bss.bufferTX0_head
                0x00800143        0x1 ./buffer.o
                0x00800143                bufferTX0_head
 .bss.i         0x00800144        0x1 ./main.o
                0x00800144                i
 *(COMMON)
 COMMON         0x00800145      0x100 ./buffer.o
                0x00800145                bufferTX0
                0x00800185                bufferTX1
                0x008001c5                bufferRX0
                0x00800205                bufferRX1
 COMMON         0x00800245       0x91 ./main.o
                0x00800245                rel4_flag
                0x00800246                cnt
                0x00800247                rel3_flag
                0x00800248                flag_1s
                0x0080024a                rel1_flag
                0x0080024b                data
                0x00800253                relcmp
                0x00800293                buf
                0x008002d3                flag_1ms
                0x008002d5                rel2_flag
                0x008002d6                PROVIDE (__bss_end, .)
                0x00000698                __data_load_start = LOADADDR (.data)
                0x000006d4                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008002d6        0x0
                0x008002d6                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008002d6                PROVIDE (__noinit_end, .)
                0x008002d6                _end = .
                0x008002d6                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x00000000      0x750
 *(.stab)
 .stab          0x00000000      0x6cc c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm164p.o
 .stab          0x000006cc       0x84 c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5\libc.a(strcmp.o)
                                 0x90 (size before relaxing)

.stabstr        0x00000000      0x10b
 *(.stabstr)
 .stabstr       0x00000000      0x10b c:/program files (x86)/atmel/avr tools/avr toolchain/bin/../lib/gcc/avr/4.7.2/../../../../avr/lib/avr5/crtm164p.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x00000000       0x2f
 *(.comment)
 .comment       0x00000000       0x2f ./adc.o
                                 0x30 (size before relaxing)
 .comment       0x00000000       0x30 ./buffer.o
 .comment       0x00000000       0x30 ./main.o
 .comment       0x00000000       0x30 ./uart.o

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(mgr.elf elf32-avr)
LOAD linker stubs
